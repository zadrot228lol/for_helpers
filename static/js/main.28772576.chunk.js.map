{"version":3,"sources":["img/logo.svg","components/Header.tsx","components/Table.tsx","components/Questions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","Container","className","src","logo","to","Button","color","variant","useStyles","makeStyles","table","minWidth","TableHelpers","helpers","allowEdit","onEditRow","onChange","nickname","lection","val","alert","classes","readOnlyInput","Typography","align","style","marginBottom","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","map","helper","i","id","TableBody","scope","lections","rules_server","readOnly","checked","type","interaction_players","system_punish","examOne","errors_admin","softs","finans","examTwo","Questions","marginTop","margin","Accordion","AccordionSummary","expandIcon","aria-controls","fontSize","fontWeight","textAlign","width","AccordionDetails","text","answer","question","fontFamily","App","state","lectionName","oldHelpers","slice","find","Helper","setState","path","exact","render","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28772576.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9627a504.svg\";","import { Button, Container } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../img/logo.svg';\r\nimport { ReactSVG } from 'react-svg';\r\n\r\nconst Header: React.FC = (props) => {\r\n    return (\r\n        <header>\r\n            <Container>\r\n                <div className=\"header__element-container\">\r\n                    <div className=\"header__element-nav header__logo\">\r\n                        <ReactSVG src={logo} />\r\n                    </div>\r\n                    <div className=\"header__element-nav\">\r\n                        <Link to=\"/questions\">Вопросы на разряды</Link>\r\n                    </div>\r\n                    <div className=\"header__element-nav\">\r\n                        <Link to=\"/table\">Таблица хелперов</Link>\r\n                    </div>\r\n                    <div className=\"header__element-nav\">\r\n                        <Link to=\"/arhive\">Архив</Link>\r\n                    </div>\r\n                    <Button color=\"secondary\" variant=\"contained\">Войти</Button>\r\n                </div>\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Helper } from '../interface';\r\nimport { Typography } from '@material-ui/core';\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\ntype TableHelpersProps = {\r\n    helpers: Helper[];\r\n    allowEdit: boolean;\r\n    onEditRow: (nickname: string, lectionName: 'rules_server' | 'interaction_players'\r\n    | 'system_punish' | 'examOne' | 'errors_admin' | 'softs' | 'finans' | 'examTwo', val: boolean) => void;\r\n}\r\n\r\nconst TableHelpers: React.FC<TableHelpersProps> = ({ helpers, allowEdit, onEditRow }) => {\r\n    const onChange = (nickname: string, lection: 'rules_server' | 'interaction_players' \r\n    | 'system_punish' | 'examOne' | 'errors_admin' | 'softs' | 'finans' | 'examTwo', val: boolean) => {\r\n        if(!allowEdit){\r\n            return alert(`Ваша учётная запись не позволяет редактировать таблицу`);\r\n        }\r\n        onEditRow(nickname, lection, val);\r\n    }\r\n    const classes = useStyles();\r\n    let readOnlyInput = true;\r\n    return (\r\n        <main>\r\n            <Typography align=\"center\" style={{\r\n                marginBottom: '20px'\r\n            }} variant=\"h3\">Таблица посещений лекции</Typography>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Название лекции</TableCell>\r\n                            {helpers.map((helper, i) => <TableCell key={helper.id} align=\"center\">{helper.nickname}[{i}]</TableCell>)}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Правила сервера\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'rules_server', !helper.lections.rules_server)} readOnly={readOnlyInput} checked={helper.lections.rules_server} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Взаим. с игроками\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'interaction_players', !helper.lections.interaction_players)} readOnly={readOnlyInput} checked={helper.lections.interaction_players} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Система наказания\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'system_punish', !helper.lections.system_punish)} readOnly={readOnlyInput} checked={helper.lections.system_punish} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <strong>Экзамен на повышение разряда</strong>\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'examOne', !helper.lections.examOne)} readOnly={readOnlyInput} checked={helper.lections.examOne} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Частые ошибки администрации\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'errors_admin', !helper.lections.errors_admin)} readOnly={readOnlyInput} checked={helper.lections.errors_admin} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Софты\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'softs', !helper.lections.softs)} readOnly={readOnlyInput} checked={helper.lections.softs} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Финансы\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'finans', !helper.lections.finans)} readOnly={readOnlyInput} checked={helper.lections.finans} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <strong>Экзамен на закрепление разряда</strong>\r\n                            </TableCell>\r\n                            {helpers.map((helper) => <TableCell key={`LECTION__${helper.id}`} align=\"center\">\r\n                                <input onChange={() => onChange(helper.nickname, 'examTwo', !helper.lections.examTwo)} readOnly={readOnlyInput} checked={helper.lections.examTwo} type=\"checkbox\" />\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default TableHelpers;","import { AccordionSummary, Typography, Accordion, AccordionDetails } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nconst Questions: React.FC = () => {\r\n    type QuestionType = {\r\n        text: string;\r\n        answer: string;\r\n    }\r\n    const questionsOne: QuestionType[] = [\r\n        {\r\n            text: \"Какая задача администратора на сервере?\",\r\n            answer: \"Предовращать нарушения игроков, следить за игровым процессом.\",\r\n        },\r\n        {\r\n            text: \"Что ты делаешь, в случаях, если не знаешь как ответить на репорт?\",\r\n            answer: \"Спрашиваю в деканате у других хелперов, в надежде на то, что они знают\"\r\n        },\r\n        {\r\n            text: \"Можешь ли ты проверять игроков на рег.данные, если да, то расскажи процесс проверки. \",\r\n            answer: \"Хелперы проверять на рег.данные. Этим занимаются 3+\"\r\n        },\r\n        {\r\n            text: \"В репорт пришло сообщение: 'Опры нету, выпустите' твои действия?\",\r\n            answer: \"Передам репорт следящим за слётами\"\r\n        },\r\n        {\r\n            text: \"Игрок предложил тебе в качестве награды за помощь подарить аксессуар. Твои действия?\",\r\n            answer: \"Хелперам нельзя принимать подарки\"\r\n        },\r\n        {\r\n            text: \"Как можно узнать текущий курс евро?\",\r\n            answer: \"Это можно узнать позвонив на номер 8828\"\r\n        },\r\n        {\r\n            text: \"Представим ситуацию, что ты сидел админил, и посадил во время администрирование около 6-и нарушителей, троя из них тебе пишут: 'Дай опру на нарушение, иначе жб и снятие', твои действия?\",\r\n            answer: \"Отправлю на форум писать жалобу\"\r\n        },\r\n        {\r\n            text: \"В каких случаях мы можем вытащить игрока из воды?\",\r\n            answer: \"Когда мы видели что игрок попал в воду не по своей вине\"\r\n        },\r\n        {\r\n            text: \"В каких случаях можно спавнить игроков?\",\r\n            answer: \"В случаях когда игрок застрял, либо нарушает правила\"\r\n        },\r\n        {\r\n            text: \"В репорт пришел вопрос: 'не появляется метка на развозчике пиццы', что делать?\",\r\n            answer: \"Снять и надеть форму развозчика\"\r\n        },\r\n        {\r\n            text: \"Пришел репорт, 299 читер. В реконе ты видишь как игрок имеет 9 ранг ФБР и он летает на скутере, твои действия?\",\r\n            answer: \"Я это зафрапшу и передам следящим МЮ, а они уже сами разберутся.\"\r\n        },\r\n        {\r\n            text: \"Как правильно запрашивать аццепт?\",\r\n            answer: \"Написать в беседу администрации - /accept, и переслать это сообщения ГА, после чего он зайдёт в игру и выдаст аццепт.\"\r\n        },\r\n        {\r\n            text: \"Процесс проверки игроков на песок.\",\r\n            answer: \"Телепортировать их обоих в админ зону, и попросить одновременно сделать какое-либо действие.\",\r\n        },\r\n        {\r\n            text: `Пришёл репорт: \"достаньте из воды, игрок скинул ковшом\". Твои действия? `,\r\n            answer: \"Мы не достаём людей из воды, только при условии если видели полную ситуацию\"\r\n        },\r\n        {\r\n            text: `Пришел репорт: \"Следите за дропом, 211 снайперская винтовка\" твои действия?`,\r\n            answer: `Передам репорт следящим за дропом.`\r\n        },\r\n        {\r\n            text: `Какое КД между рекламой в VIP чате? `,\r\n            answer: `3 минуты`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за ДМ?`,\r\n            answer: `jail: 30-180 min, TCP: 1-3 зв`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за ДМ ЗЗ?`,\r\n            answer: `jail: 120 - 180 min, TCP: 3-5 зв, Warn`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за ТК?`,\r\n            answer: `jail: 60-180 min, TCP - 2-3 зв`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за чит? (Не вредоносный)`,\r\n            answer: `30 дней бана.`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за чит? (Вредоносный)`,\r\n            answer: `Бан по IP`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за капс?`,\r\n            answer: `60 минут мута`\r\n        },\r\n        {\r\n            text: `Что такое мультиаккаунт?`,\r\n            answer: `Это аккаунт который находится во владении двух и более человек`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за рекламу в рабочие чаты?`,\r\n            answer: `Мут на 60 минут`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за прокачку персонажа на сердечке?`,\r\n            answer: `Кик`\r\n        },\r\n        {\r\n            text: `Что мы выдаём за прокачку зарплаты путём стояние АФК без ESC?`,\r\n            answer: `Кик`\r\n        }\r\n    ];\r\n    const questionsTwo: QuestionType[] = [\r\n        {\r\n            text: `Можешь ли ты помогать людям со сделками?`,\r\n            answer: `Да`\r\n        },\r\n        {\r\n            text: `Разрешена ли передача аксессуаров или денег с основы на твинк и обратно ?`,\r\n            answer: `Нет`\r\n        },\r\n        {\r\n            text: `Расскажи все возможные взаимодействия с евро`,\r\n            answer: `Обычные функции валюты. Обменивание, покупка любых финансов`\r\n        },\r\n        {\r\n            text: `Объясните термин \"обход комки\"`,\r\n            answer: `Когда игроки обходят комиссию, при продажи чего либо с помощью евро, или передачи денег через фаму или бизнес.`\r\n        },\r\n        {\r\n            text: `Если Вы словили с гос имущество, когда можно его продать?`,\r\n            answer: `Через час.`\r\n        },\r\n        {\r\n            text: `Продажа ниже гос разрешена?`,\r\n            answer: `Да`\r\n        },\r\n        {\r\n            text: `Если Ваш друг был заблокирован на 30 дней за чит, можете ли Вы оплачивать налоги на его имущество ?`,\r\n            answer: `Можно`\r\n        },\r\n        {\r\n            text: `Игроки могут обмениваться нелегальными скинами, или продавать их?`,\r\n            answer: `Нет`\r\n        },\r\n        {\r\n            text: `Какие имеются виды финансов на сервере?`,\r\n            answer: `Недвижимость, автомобили, аксессуары, валюта`\r\n        },\r\n        {\r\n            text: `Обман зрение что это?`,\r\n            answer: `огда цифры одинаковые по типу 11111111, 333333333332, 2222222255555555, или же когда пишется \"Скупка\", но игрок продает, или наоборот`\r\n        },\r\n        {\r\n            text: `Администратор может покупать что-то в магазинах на сервере или передавать деньги в игре?`,\r\n            answer: `Нет, не имеет право`\r\n        },\r\n        {\r\n            text: `Что такое damager?`,\r\n            answer: `Чит, позволяющий наносит урон вокруг игрока, при этом анимации выстрелов или ударов не будет видно. Могут быть только видны трассера которые попадают в пол.`\r\n        },\r\n        {\r\n            text: `Что такое Flycar?`,\r\n            answer: `С помощью этого чита, можно парить в воздухе на любом Т/С.`\r\n        },\r\n        {\r\n            text: `Как определить Клео скиллы и наказуемо ли это?`,\r\n            answer: `Проверить довольно просто. Если при выстрелах игрок скользит/бегает, но при этом у него нету 100% навыком - это главный звоночек. Без Клео скиллов после каждого выстрела человек станится, и не может ходить, +С также невозможно сделать, помимо этого попадать он будет 1/2 пули из 5 на средней дистанции.`\r\n        },\r\n        {\r\n            text: `Что такое коллизия?`,\r\n            answer: `Чит, дающий возможность проходить/проезжать сквозь стены.`\r\n        },\r\n        {\r\n            text: `Что такое клипварп и запрещен ли он?`,\r\n            answer: `Запрещен. В админ Тулсе он также есть. Чит дающий возможность телепортироваться по карте. `\r\n        },\r\n        {\r\n            text: `В какие дни запрещено нападать на военку?`,\r\n            answer: `Воскресенье.`\r\n        },\r\n        {\r\n            text: `В какое время нельзя нападать на военку?`,\r\n            answer: `00:00 - 06:00, 17:00 - 20:00.`\r\n        },\r\n        {\r\n            text: `От сколько человек можно нападать на военку?`,\r\n            answer: `3`\r\n        },\r\n        {\r\n            text: `Сколько секунд есть у человека, чтобы надеть маску когда она слетела?`,\r\n            answer: `15`\r\n        },\r\n        {\r\n            text: `Можно ли использовать машинки на п.у, на военке?`,\r\n            answer: `Нет`\r\n        },\r\n        {\r\n            text: `Разрешено ли нападать на военку без маски?`,\r\n            answer: `Нет`\r\n        },\r\n        {\r\n            text: `Разрешено ли гражданским находиться на военных базах?`,\r\n            answer: `Нет.`\r\n        },\r\n        {\r\n            text: `Разрешено ли использовать любые виды камней, бессметрие/телепортации, и что за это выдают`,\r\n            answer: `Нет. Варн.`\r\n        },\r\n    ];\r\n    return (\r\n        <main>\r\n            <Typography align=\"center\" style={{\r\n                marginBottom: '20px'\r\n            }} variant=\"h3\">Вопросы на разряды</Typography>\r\n            <hr />\r\n            <div style={{\r\n                marginTop: 20,\r\n                marginBottom: 20\r\n            }}><div style={{\r\n                margin: '20px 0'\r\n            }}>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ArrowDropDownIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography style={{\r\n                            fontSize: \"2rem\",\r\n                            fontWeight: 400,\r\n                            textAlign: 'center',\r\n                            width: '100%'\r\n                        }}>Первый разряд</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <div className=\"content\">\r\n                            {questionsOne.map(question => <div key={`QUETION__${question.answer}-${question.text}`} style={{\r\n                                marginTop: 20,\r\n                                textAlign: 'center',\r\n                                fontSize: 18\r\n                            }}>\r\n                                <div style={{\r\n                                    fontFamily: `'Source Sans Pro', sans-serif`,\r\n                                    fontSize: 20\r\n                                }}>{question.text}</div>\r\n\r\n                                <div style={{\r\n                                    fontFamily: `'Oswald', sans-serif`\r\n                                }}\r\n                                ><strong>(Ответ: {question.answer})</strong>\r\n                                </div>\r\n                            </div>)}\r\n                        </div>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            </div>\r\n                <div>\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ArrowDropDownIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography style={{\r\n                                fontSize: \"2rem\",\r\n                                fontWeight: 400,\r\n                                textAlign: 'center',\r\n                                width: '100%'\r\n                            }}>Второй разряд</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <div className=\"content\">\r\n                                {questionsTwo.map(question => <div key={`QUETION__${question.answer}-${question.text}`} style={{\r\n                                    marginTop: 20,\r\n                                    textAlign: 'center',\r\n                                    fontSize: 18\r\n                                }}>\r\n                                    <div style={{\r\n                                        fontFamily: `'Source Sans Pro', sans-serif`,\r\n                                        fontSize: 20\r\n                                    }}>{question.text}</div>\r\n\r\n                                    <div style={{\r\n                                        fontFamily: `'Oswald', sans-serif`\r\n                                    }}\r\n                                    ><strong>(Ответ: {question.answer})</strong>\r\n                                    </div>\r\n                                </div>)}\r\n                            </div>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n\r\n                </div></div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Questions;","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport { Container } from '@material-ui/core';\nimport { Helper } from './interface';\nimport Questions from './components/Questions';\n\ntype AppState = {\n  table: {\n    helpers: Helper[];\n  }\n}\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    table: {\n      helpers: [\n        {\n          id: `Jack_Chaltsev_123kfdsjiA`,\n          nickname: `Jack_Chaltsev`,\n          lections: {\n            rules_server: true,\n            interaction_players: true,\n            system_punish: true,\n            examOne: true,\n            errors_admin: false,\n            softs: false,\n            finans: true,\n            examTwo: false,\n          }\n        },\n        {\n          id: `Jeeack_Chaltsev_123kfdsjiA`,\n          nickname: `Fly_Delaporte`,\n          lections: {\n            rules_server: false,\n            interaction_players: false,\n            system_punish: false,\n            examOne: false,\n            errors_admin: false,\n            softs: false,\n            finans: false,\n            examTwo: false,\n          }\n        },\n        {\n          id: `Jeeack_gftsev_123kfdsjiA`,\n          nickname: `Alexander_Chadaev`,\n          lections: {\n            rules_server: false,\n            interaction_players: false,\n            system_punish: false,\n            examOne: false,\n            errors_admin: false,\n            softs: false,\n            finans: false,\n            examTwo: false,\n          }\n        },\n        {\n          id: `Jeeacrewrewrewk_gftsev_123kfdsjiA`,\n          nickname: `Katheriene_Lance`,\n          lections: {\n            rules_server: false,\n            interaction_players: false,\n            system_punish: false,\n            examOne: false,\n            errors_admin: false,\n            softs: false,\n            finans: false,\n            examTwo: false,\n          }\n        }\n      ]\n    }\n  }\n  onEditRow = (nickname: string, lectionName: 'rules_server' | 'interaction_players'\n    | 'system_punish' | 'examOne' | 'errors_admin' | 'softs' | 'finans' | 'examTwo', val: boolean) => {\n      let oldHelpers = this.state.table.helpers.slice();\n      const helper = oldHelpers.find(Helper => Helper.nickname === nickname);\n      if(!helper){\n        return;\n      }\n      helper.lections[lectionName] = val;\n      this.setState({\n        table: {\n          helpers: oldHelpers\n        }\n      });\n      \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Container>\n            <Route path=\"/table\" exact render={() => <Table onEditRow={this.onEditRow} helpers={this.state.table.helpers} allowEdit={true} />} />\n            <Route path={['/', '/questions']} exact render={() => <Questions /> }/>\n          </Container>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}